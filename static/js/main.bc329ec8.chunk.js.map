{"version":3,"sources":["Chat.js","App.js","reportWebVitals.js","index.js"],"names":["Chat","socket","username","room","closeChat","useState","currentMessage","setCurrentMessage","messageList","setMessageList","imgName","setImgName","file","setFile","nameLeftEnterRoom","setNameLeftEnterRoom","imgRef","useRef","useEffect","emit","text","on","name","data","img","blob","Blob","type","reader","FileReader","readAsDataURL","onloadend","result","list","enterRoom","console","log","sendMessage","messageData","author","time","Date","now","getHours","getMinutes","current","value","className","onClick","map","messageContent","key","id","src","alt","style","width","height","placeholder","onChange","e","target","onKeyPress","htmlFor","xmlns","version","viewBox","d","transform","files","ref","io","connect","process","App","setUsername","setRoom","showChat","setShowChat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc329ec8.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nfunction Chat({ socket, username, room, closeChat }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [imgName, setImgName] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [nameLeftEnterRoom, setNameLeftEnterRoom] = useState(\"\");\n\n  const imgRef = useRef();\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      if (data.img !== \"\") {\n        const blob = new Blob([data.img], { type: \"file\" });\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = function () {\n          data[\"img\"] = reader.result;\n          setMessageList((list) => [...list, data]);\n        };\n      } else {\n        setMessageList((list) => [...list, data]);\n      }\n    });\n\n    socket.on(\"Who_left_room\", (name) => {\n      setNameLeftEnterRoom(name);\n    });\n\n    async function enterRoom() {\n      await socket.emit(\"enter_room\", {\n        text: `(${username}) Has Enter The Room`,\n        room,\n      });\n\n      socket.on(\"Who_enter_room\", (name) => {\n        setNameLeftEnterRoom(name);\n      });\n    }\n    enterRoom();\n  }, [socket]);\n\n  console.log(\"nameLeftEnterRoom\", nameLeftEnterRoom);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\" || file !== \"\") {\n      const messageData = {\n        author: username,\n        room,\n        currentMessage,\n        imgName,\n        img: file,\n        time:\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      };\n      await socket.emit(\"send_message\", messageData);\n\n      if (messageData.img !== \"\") {\n        const blob = new Blob([messageData.img], { type: \"file\" });\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = async function () {\n          messageData.img = reader.result;\n          setMessageList((list) => [...list, messageData]);\n        };\n      } else {\n        setMessageList((list) => [...list, messageData]);\n      }\n\n      setCurrentMessage(\"\");\n      setImgName(\"\");\n      setFile(\"\");\n      setNameLeftEnterRoom(\"\");\n      imgRef.current.value = \"\";\n    }\n  };\n\n  const selectFile = (e) => {\n    setImgName(e.target.files[0].name);\n    setFile(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <p>Live Chat In Room {room}</p>\n        <span onClick={closeChat}>x</span>\n      </div>\n      <div className=\"chat-body\">\n        <ScrollToBottom className=\"message-container\">\n          {messageList.map((messageContent, key) => (\n            <div\n              key={key}\n              className=\"message\"\n              id={username === messageContent.author ? \"you\" : \"other\"}>\n              <div>\n                <div\n                  className={`message-content ${\n                    messageContent.img !== \"\" ? \"thereImg\" : messageContent.img\n                  }`}>\n                  {messageContent.img !== \"\" ? (\n                    <>\n                      <img\n                        src={messageContent.img}\n                        alt={messageContent.imgName}\n                        style={{ width: 140, height: \"auto\" }}\n                      />\n                      <p>{messageContent.currentMessage}</p>\n                    </>\n                  ) : (\n                    <p>{messageContent.currentMessage}</p>\n                  )}\n                </div>\n                <div className=\"message-meta\">\n                  <p id=\"time\">{messageContent.time}</p>\n                  <p id=\"author\">{messageContent.author}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n          {nameLeftEnterRoom !== \"\" && (\n            <p className=\"box-left\">{nameLeftEnterRoom}</p>\n          )}\n        </ScrollToBottom>\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          value={currentMessage}\n          placeholder=\"Hey...\"\n          onChange={(e) => setCurrentMessage(e.target.value)}\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n        />\n        <div className=\"formInput\">\n          <label htmlFor=\"file\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              version=\"1\"\n              viewBox=\"0 0 64 64\">\n              <path\n                d=\"M262 487c-47-47-64-77-45-77 4 0 24 17 45 37l38 37V345c0-140 9-186 30-155 5 8 10 78 10 155v139l38-37c40-39 52-45 52-24 0 12-99 117-111 117-2 0-28-24-57-53zM157 84c-20-20 7-24 164-24 132 0 170 3 167 13-4 9-47 13-164 15-88 1-163-1-167-4z\"\n                transform=\"matrix(.1 0 0 -.1 0 64)\"></path>\n            </svg>\n          </label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            onChange={selectFile}\n            onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n            ref={imgRef}\n            className=\"inputCuFile\"\n          />\n        </div>\n        <button onClick={sendMessage}>&#9658;</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./Chat\";\n\nconst socket = io.connect(process.env.REACT_APP_SOCKET_CONNECT_URL);\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n    }\n  };\n\n  const closeChat = async () => {\n    await socket.emit(\"leave_room\", { text: `(${username}) Has Left!!`, room });\n    setShowChat(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {!showChat ? (\n        <div className=\"joinChatContainer\">\n          <h3>Join A Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"John...\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room ID...\"\n            onChange={(e) => setRoom(e.target.value)}\n          />\n          <button onClick={joinRoom}>Join A Room</button>\n        </div>\n      ) : (\n        <Chat\n          socket={socket}\n          username={username}\n          room={room}\n          closeChat={closeChat}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n{\n  /* <div className=\"box_send_recive_msg\">\n<h1>{room} Room</h1>\n<div className=\"box_recive_msg\">\n  {messageList?.map((item, key) => (\n    <div className=\"box_msg\" key={key}>\n      <div>\n        <h2>{item.currentMessage}</h2>\n        <div>\n          <span>{item.name}</span>\n          <span>{item.date}</span>\n        </div>\n      </div>\n    </div>\n  ))}\n</div>\n<div className=\"box_send_msg\">\n  <input\n    type=\"text\"\n    placeholder=\"Say Hay.....\"\n    onChange={handleInputMsg}\n    value={currentMessage}\n  />\n  <button onClick={handleSendMsg}>send</button>\n</div>\n</div> */\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}